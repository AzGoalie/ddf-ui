version: 2.1 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point

    working_directory: ~/repo # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/openjdk:8u171-jdk # ...with this image as the primary container; this is where all `steps` will run
    environment:
      MAVEN_OPTS: -Xmx2G

    steps: # a collection of executable commands

      - checkout # check out source code to working directory

#      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
#          keys:
#            - v1-dependencies-{{ checksum "pom.xml" }}
#            # fallback to using the latest cache if no exact match is found
#            - v1-dependencies-
#
#      - run: mvn dependency:go-offline --no-transfer-progress -D # gets the project dependencies
#
#      - save_cache: # saves the project dependencies
#          paths:
#            - ~/.m2
#          key: v1-dependencies-{{ checksum "pom.xml" }}

      - run: mvn clean install -DbuildEnv=dev # run the actual tests

      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: target/surefire-reports

#      - store_artifacts: # store the uberjar as an artifact
#          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
#          path: target/demo-java-spring-0.0.1-SNAPSHOT.jar
#      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples